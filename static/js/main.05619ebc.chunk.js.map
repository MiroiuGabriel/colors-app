{"version":3,"sources":["components/functions/generateRandomColor.js","components/ButtonSidebar.js","components/Card.js","components/Footer.js","components/Cards.js","components/ColorGame.js","App.js","index.js"],"names":["colors","Map","set","getRandomColor","color","i","digit","Math","floor","random","has","get","numberCount","char","Number","isInteger","ButtonSidebar","card","lockCard","removeCard","length","displayNotification","useEffect","navigator","permissions","query","name","allowWithoutGesture","hideDiv","clsx","isLocked","className","onClick","id","a","clipboard","writeText","request","Card","addColor","isLast","showLast","namedColor","namer","pick","addButtonClasses","style","backgroundColor","slice","pantone","Footer","shuffleAll","Cards","cards","divRef","useRef","current","focus","ref","tabIndex","onKeyPress","ev","code","map","index","initalCards","savedCards","JSON","parse","window","localStorage","getItem","ColorGame","useState","setCards","showNotification","setShowNotification","setItem","stringify","notification","filter","setTimeout","newCards","splice","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.05619ebc.chunk.js","sourcesContent":["const colors = new Map();\ncolors.set(10, 'A');\ncolors.set(11, 'B');\ncolors.set(12, 'C');\ncolors.set(13, 'D');\ncolors.set(14, 'E');\ncolors.set(15, 'F');\nexport const getRandomColor = () => {\n\tlet color = '';\n\tfor (let i = 0; i < 6; i++) {\n\t\tlet digit = Math.floor(Math.random() * 15);\n\t\tif (colors.has(digit)) {\n\t\t\tcolor += colors.get(digit);\n\t\t} else {\n\t\t\tcolor += digit;\n\t\t}\n\t\tif (i === 5) {\n\t\t\tlet numberCount = 0;\n\t\t\tfor (let char of color) {\n\t\t\t\tif (Number.isInteger(+char)) {\n\t\t\t\t\tnumberCount++;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (numberCount === 6) {\n\t\t\t\ti = -1;\n\t\t\t\tcolor = '';\n\t\t\t}\n\t\t}\n\t}\n\treturn '#' + color;\n};\n","import { IoRemove as RemoveIcon } from 'react-icons/io5';\nimport { MdContentCopy as Copy } from 'react-icons/md';\nimport { AiFillLock as Locked } from 'react-icons/ai';\nimport { AiFillUnlock as Unlocked } from 'react-icons/ai';\nimport clsx from 'clsx';\nimport './css/buttonsidebar.css';\nimport { useEffect } from 'react';\n\nconst ButtonSidebar = ({ card, lockCard, removeCard, length, displayNotification }) => {\n\tuseEffect(() => {\n\t\tconst queryOpts = { name: 'clipboard-write', allowWithoutGesture: false };\n\t\tnavigator.permissions.query(queryOpts);\n\t}, []);\n\n\tconst hideDiv = clsx('button tooltip mobile', length === 2 && 'hide-div');\n\tconst isLocked = clsx('button tooltip ', card.isLocked && 'highlight');\n\treturn (\n\t\t<div className=\"main-buttons-container\">\n\t\t\t<div className={hideDiv} onClick={() => removeCard(card.id)}>\n\t\t\t\t<RemoveIcon />\n\t\t\t\t<span className=\"tooltiptext\">Remove color</span>\n\t\t\t</div>\n\t\t\t<div\n\t\t\t\tclassName=\"button tooltip\"\n\t\t\t\tonClick={async () => {\n\t\t\t\t\tif (navigator.clipboard) {\n\t\t\t\t\t\tawait navigator.clipboard.writeText(card.color);\n\t\t\t\t\t\tdisplayNotification();\n\t\t\t\t\t} else {\n\t\t\t\t\t\tawait navigator.permissions.request('clipboard-write');\n\t\t\t\t\t}\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t<Copy />\n\t\t\t\t<span className=\"tooltiptext\">Copy HEX</span>\n\t\t\t</div>\n\t\t\t<div className={isLocked} onClick={() => lockCard(card.id)}>\n\t\t\t\t{card.isLocked ? <Locked /> : <Unlocked />}\n\t\t\t\t<span className=\"tooltiptext\">Toggle lock</span>\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nexport default ButtonSidebar;\n","import ButtonSidebar from './ButtonSidebar';\nimport namer from 'color-namer';\nimport clsx from 'clsx';\nimport { IoMdAdd as AddButton } from 'react-icons/io';\nimport './css/card.css';\n\nconst Card = ({ card, lockCard, removeCard, length, displayNotification, addColor, isLast }) => {\n\tconst showLast = clsx('sidebar', card.isLocked && 'show-last');\n\tconst namedColor = namer(card.color, { pick: ['pantone'] });\n\tconst addButtonClasses = clsx('add-button-trigger', isLast && 'hide-div');\n\treturn (\n\t\t<div style={{ backgroundColor: card.color }} className=\"card-container\">\n\t\t\t<div className={showLast}>\n\t\t\t\t<ButtonSidebar\n\t\t\t\t\tcard={card}\n\t\t\t\t\tlockCard={lockCard}\n\t\t\t\t\tremoveCard={removeCard}\n\t\t\t\t\tlength={length}\n\t\t\t\t\tdisplayNotification={displayNotification}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t\t<h1 className=\"hex\">{card.color.slice(1, card.color.length)}</h1>\n\t\t\t<h2 className=\"hex-name\">{namedColor.pantone[0].name}</h2>\n\t\t\t<div className={addButtonClasses}>\n\t\t\t\t{length < 7 && (\n\t\t\t\t\t<div className=\"add-button tooltip\" onClick={() => addColor(card.id)}>\n\t\t\t\t\t\t<AddButton />\n\t\t\t\t\t\t<span className=\"tooltiptext\">Add colors</span>\n\t\t\t\t\t</div>\n\t\t\t\t)}\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nexport default Card;\n","import './css/footer.css';\n\nconst Footer = ({ shuffleAll }) => {\n\treturn (\n\t\t<div className=\"footer-container\">\n\t\t\t<button className=\"generator-button\" onClick={shuffleAll}>\n\t\t\t\tGenerate\n\t\t\t</button>\n\t\t</div>\n\t);\n};\n\nexport default Footer;\n","import { useEffect, useRef } from 'react';\nimport Card from './Card';\nimport Footer from './Footer';\nimport './css/cards.css';\n\nconst Cards = ({ cards, shuffleAll, lockCard, removeCard, displayNotification, addColor }) => {\n\tconst divRef = useRef(null);\n\n\tuseEffect(() => {\n\t\tdivRef.current.focus();\n\t}, []);\n\n\treturn (\n\t\t<div\n\t\t\tref={divRef}\n\t\t\ttabIndex=\"0\"\n\t\t\tclassName=\"cards-container\"\n\t\t\tonKeyPress={ev => ev.code === 'Space' && shuffleAll()}\n\t\t>\n\t\t\t{cards.map((card, index) => (\n\t\t\t\t<Card\n\t\t\t\t\tkey={card.id}\n\t\t\t\t\tcard={card}\n\t\t\t\t\tlockCard={lockCard}\n\t\t\t\t\tremoveCard={removeCard}\n\t\t\t\t\tlength={cards.length}\n\t\t\t\t\tdisplayNotification={displayNotification}\n\t\t\t\t\taddColor={addColor}\n\t\t\t\t\tisLast={index === cards.length - 1}\n\t\t\t\t/>\n\t\t\t))}\n\t\t\t<Footer shuffleAll={shuffleAll} />\n\t\t</div>\n\t);\n};\n\nexport default Cards;\n","import { useState, useEffect } from 'react';\nimport { getRandomColor } from './functions/generateRandomColor';\nimport Cards from './Cards';\nimport clsx from 'clsx';\nimport './css/colorgame.css';\n\nconst initalCards = [\n\t{\n\t\tid: 1,\n\t\tcolor: getRandomColor(),\n\t\tisLocked: false,\n\t},\n\t{\n\t\tid: 2,\n\t\tcolor: getRandomColor(),\n\t\tisLocked: false,\n\t},\n\t{\n\t\tid: 3,\n\t\tcolor: getRandomColor(),\n\t\tisLocked: false,\n\t},\n\t{\n\t\tid: 4,\n\t\tcolor: getRandomColor(),\n\t\tisLocked: false,\n\t},\n];\n\nconst savedCards = JSON.parse(window.localStorage.getItem('Cards'));\n\nconst ColorGame = () => {\n\tconst [cards, setCards] = useState(savedCards || initalCards);\n\tconst [showNotification, setShowNotification] = useState(false);\n\tuseEffect(() => {\n\t\twindow.localStorage.setItem('Cards', JSON.stringify(cards));\n\t}, [cards]);\n\n\tconst shuffleAll = () => {\n\t\tsetCards(\n\t\t\tcards.map(card => {\n\t\t\t\tif (card.isLocked) {\n\t\t\t\t\treturn card;\n\t\t\t\t}\n\t\t\t\treturn { ...card, color: getRandomColor() };\n\t\t\t})\n\t\t);\n\t};\n\tconst lockCard = id => {\n\t\tsetCards(cards.map(card => (card.id === id ? { ...card, isLocked: !card.isLocked } : card)));\n\t};\n\tconst removeCard = id => {\n\t\tsetCards(cards.filter(card => card.id !== id));\n\t};\n\tconst displayNotification = () => {\n\t\tsetShowNotification(true);\n\t\tsetTimeout(() => setShowNotification(false), 2000);\n\t};\n\tconst addColor = id => {\n\t\tif (cards.length < 10) {\n\t\t\tlet newCards = [...cards];\n\t\t\tnewCards.splice(id, 0, { id: Math.floor(Math.random() * 1000), color: getRandomColor(), isLocked: false });\n\t\t\tsetCards(newCards);\n\t\t}\n\t};\n\tconst notification = clsx('notification', showNotification && 'show-notification');\n\treturn (\n\t\t<div className=\"color-game-container\">\n\t\t\t<Cards\n\t\t\t\tcards={cards}\n\t\t\t\tshuffleAll={shuffleAll}\n\t\t\t\tlockCard={lockCard}\n\t\t\t\tremoveCard={removeCard}\n\t\t\t\tdisplayNotification={displayNotification}\n\t\t\t\taddColor={addColor}\n\t\t\t/>\n\t\t\t<div className={notification}>Color copied to the clipboard</div>\n\t\t</div>\n\t);\n};\n\nexport default ColorGame;\n","import './components/ColorGame.js';\nimport './App.css';\nimport ColorGame from './components/ColorGame.js';\n\nconst App = () => {\n\treturn <ColorGame />;\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<App />\n\t</React.StrictMode>,\n\tdocument.getElementById('root')\n);\n"],"sourceRoot":""}